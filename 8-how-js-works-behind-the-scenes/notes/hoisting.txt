Hoisting - Makes some types of variables accessible/usable in the code before they are actually declared.

"Variables are lifted to the top of their scope"

Behind the scenes, what is happening:

    Code is scanned for variable declarations, and for each variable, a new property is created in the  Variable Environment Object.


                            Hoisted?            Initial Value           scope

    Function Declarations:      Yes             actual function         Block

    var variables:             Yes              undefined               Function

    let and const variables:    NO              <uninitialized>, TDZ    Block

    function expressions
     + arrows                   Depends on if we used var or let/const.

     Due to the hoisting behaviors of let/const, we want to use those rather than var in modern environments.

     Due to function declarations being hoisted, we can use functions before they are declared in code.
     The opposite is true about function expressions and arrow functions. We cannot use function expressions before they are declared in code.